version: '3.8'

services:
  glohorizon-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: glohorizon-api
    ports:
      - "5080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./appsettings.Production.json:/app/appsettings.Production.json:ro
    networks:
      - glohorizon-network

  postgres:
    image: postgres:15-alpine
    container_name: glohorizon-postgres
    environment:
      POSTGRES_DB: glohorizon
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - glohorizon-network

volumes:
  postgres_data:

networks:
  glohorizon-network:
    driver: bridge